<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picProfilePicture.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>